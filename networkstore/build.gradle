plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.protobuf'
}

apply from: "${rootProject.projectDir}/config/gradle/commonLibraryConfig.gradle"

android {
    compileSdk project.compileSdkVersion

    defaultConfig {
        minSdk project.minSdkVersionApp
        targetSdk project.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    sourceSets{
        main.java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/javalite"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

//    implementation project(path: ':common')

    implementation appDependencies.kotlin
    implementation appDependencies.corektx
    implementation appDependencies.jodatime

    implementation diDependencies.dagger
    implementation diDependencies.daggerAndroid
    kapt diDependencies.daggerCompiler
    kapt diDependencies.daggerCompilerAndroid

//todo poprawic
    implementation 'com.google.protobuf:protobuf-lite:3.0.1'
    implementation 'io.grpc:grpc-okhttp:1.25.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-protobuf-lite:1.25.0' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-stub:1.25.0' // CURRENT_GRPC_VERSION
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.10.0' }
    plugins {
        javalite { artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0" }
        grpc { artifact = 'io.grpc:protoc-gen-grpc-java:1.25.0' // CURRENT_GRPC_VERSION
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                javalite {}
                grpc { option 'lite' }
            }
        }
    }
}