plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
}

apply from: "${rootProject.projectDir}/config/detekt/detekt.gradle"
apply from: "${rootProject.projectDir}/config/gradle/libs.gradle"
apply from: "${rootProject.projectDir}/config/gradle/versions-android-sdk.gradle"

android {
    compileSdk project.compileSdkVersion

    defaultConfig {
        applicationId "com.zywczas.myworkout"
        minSdk project.minSdkVersionApp
        targetSdk project.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner project.instrumentationTestRunner
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion project.compose_version
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }
    packagingOptions {
        exclude "META-INF/LICENSE*"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation project(path: ':common')
    implementation project(path: ':databasestore')
    implementation project(path: ':networkstore')

    implementation appDependencies.corektx
    implementation appDependencies.kotlin
    implementation appDependencies.legacySupport
    implementation appDependencies.jodatime

    implementation viewDependencies.material
    //todo sprawdzic ktore nie potrzebne
    implementation composeDependencies.activity
    implementation composeDependencies.ui
    implementation composeDependencies.foundation
    implementation composeDependencies.animation
    implementation composeDependencies.uiTooling
    implementation composeDependencies.material
    implementation composeDependencies.accompanist
    implementation composeDependencies.iconsCore
    implementation composeDependencies.iconsExtended
    implementation composeDependencies.livedata
    implementation composeDependencies.viewModel
    implementation composeDependencies.navigation

    implementation kotlinCoroutines

    implementation hiltDependencies.hilt
    kapt hiltDependencies.compiler
    implementation hiltDependencies.navigationCompose

    //todo sprawdzic czy potrzebne, w innych modulach tez
    implementation lifeCycleDependencies.liveData
}
